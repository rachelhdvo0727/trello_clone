{"version":3,"sources":["partials/vars.js","script.js"],"names":["apiKey","dataTrello","addNewBtn","document","querySelector","form","displayList","cardTemplate","content","clone","cloneNode","elements","formElms","querySelectorAll","errormsgs","cards","validForm","i","window","addEventListener","start","evt","classList","toggle","setAttribute","checkInputData","getData","innerHTML","fetch","method","headers","accept","then","e","json","showData","forEach","showTasks","task","dataset","id","_id","textContent","task_name","estimate","deadline","priority","creator","deleteATask","getTasktoEdit","prepareForEdit","moveRight","moveLeft","appendChild","card","lists","length","postData","data","JSON","stringify","body","res","preventDefault","elm","remove","checkValidity","state","taskName","value","description","describe","putNewData","add","reset","checked","callback","putData","copy"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["export const apiKey = \"5e956ffd436377171a0c230f\";\nexport const dataTrello =\n  \"https://frontendspring20-e4cd.restdb.io/rest/trelloclone\";\nexport const addNewBtn = document.querySelector(\".addNew\");\nexport const form = document.querySelector(\"form\");\nexport const displayList = document.querySelector(\"#todoList > .list\");\nexport const cardTemplate = document.querySelector(\"template\").content;\nexport const clone = cardTemplate.cloneNode(true);\nexport const elements = form.elements;\nexport const formElms = form.querySelectorAll(\"input\");\nexport const errormsgs = document.querySelectorAll(\".msg\");\nexport const cards = document.querySelectorAll(\"#cardcontainer\");\nexport let validForm = true;\n","\"use strict\";\nimport {\n  dataTrello,\n  apiKey,\n  addNewBtn,\n  form,\n  displayList,\n  cards,\n  cardTemplate,\n  clone,\n  elements,\n  formElms,\n  errormsgs,\n  validForm,\n} from \"./partials/vars\";\nlet i = 0;\nwindow.addEventListener(\"DOMContentLoaded\", start);\n\nfunction start() {\n  addNewBtn.addEventListener(\"click\", (evt) => {\n    form.classList.toggle(\"hidden\");\n  });\n  form.setAttribute(\"novalidate\", true);\n  checkInputData();\n  getData();\n}\nfunction getData() {\n  document.querySelector(\"#todoList > .list\").innerHTML = \"\";\n  fetch(dataTrello, {\n    method: \"get\",\n    headers: {\n      accept: \"application/json\",\n      \"x-apikey\": apiKey,\n      \"cache-control\": \"no-cache\",\n    },\n  })\n    .then((e) => e.json())\n    .then(showData);\n}\nfunction showData(e) {\n  e.forEach(showTasks);\n}\nfunction showTasks(task) {\n  const cardTemplate = document.querySelector(\"template\").content;\n  const clone = cardTemplate.cloneNode(true);\n  clone.querySelector(\"#cardcontainer\").dataset.id = task._id;\n  clone.querySelector(\".title\").textContent = task.task_name;\n  //clone.querySelector(\".descr\").textContent = task.description;\n  clone.querySelector(\".estimate\").textContent = \"ETC: \" + task.estimate;\n  clone.querySelector(\".deadline\").textContent = \"Due: \" + task.deadline;\n  clone.querySelector(\".priority\").textContent = task.priority;\n  clone.querySelector(\".creator\").textContent = \"Created by: \" + task.creator;\n  clone.querySelector(\"button.close\").addEventListener(\"click\", (evt) => {\n    deleteATask(task._id);\n  });\n  clone.querySelector(\"button.editbtn\").addEventListener(\"click\", (evt) => {\n    getTasktoEdit(task._id, prepareForEdit);\n  });\n  clone.querySelector(\".mvright\").addEventListener(\"click\", () => {\n    moveRight(task._id);\n  });\n  clone.querySelector(\".mvleft\").addEventListener(\"click\", () => {\n    moveLeft(task._id);\n  });\n  displayList.appendChild(clone);\n}\nfunction moveRight(id) {\n  let card = document.querySelector(`#cardcontainer[data-id='${id}']`);\n  const lists = document.querySelectorAll(\".list\");\n  i++;\n  if (i === lists.length) {\n    i = 0;\n  }\n  lists[i].appendChild(card);\n}\nfunction moveLeft(id) {\n  let card = document.querySelector(`#cardcontainer[data-id='${id}']`);\n  const lists = document.querySelectorAll(\".list\");\n  i--;\n  if (i < 0) {\n    i = lists.length - 1;\n  }\n  lists[i].appendChild(card);\n}\nfunction postData(data) {\n  const postData = JSON.stringify(data);\n  fetch(dataTrello, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      \"x-apikey\": apiKey,\n      \"cache-control\": \"no-cache\",\n    },\n    body: postData,\n  })\n    .then((res) => res.json())\n    .then((data) => showTasks(data));\n}\nfunction checkInputData() {\n  form.addEventListener(\"submit\", (evt) => {\n    evt.preventDefault(); //turn off validation on submit\n    formElms.forEach((elm) => {\n      elm.classList.remove(\"invalid\");\n    });\n\n    if (form.checkValidity() && validForm) {\n      if (form.dataset.state === \"post\") {\n        //send data\n        postData({\n          task_name: elements.taskName.value,\n          description: elements.describe.value,\n          estimate: elements.estimate.value,\n          deadline: elements.deadline.value,\n          priority: elements.priority.value,\n          creator: elements.creator.value,\n        });\n      } else {\n        putNewData(\n          {\n            task_name: elements.taskName.value,\n            description: elements.describe.value,\n            estimate: elements.estimate.value,\n            deadline: elements.deadline.value,\n            priority: elements.priority.value,\n            creator: elements.creator.value,\n          },\n          form.dataset.id\n        );\n      }\n      form.classList.add(\"hidden\");\n      form.reset();\n    } else {\n      //loop validity\n      formElms.forEach((elm) => {\n        elm.classList.remove(\"invalid\");\n        if (!elm.checkValidity()) {\n          elm.classList.add(\"invalid\");\n        }\n      });\n    }\n  });\n}\nfunction deleteATask(id) {\n  document.querySelector(`#cardcontainer[data-id='${id}']`).remove();\n  fetch(`${dataTrello}/${id}`, {\n    method: \"delete\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      \"x-apikey\": apiKey,\n      \"cache-control\": \"no-cache\",\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => {});\n}\nfunction prepareForEdit(data) {\n  //show the form\n  form.classList.remove(\"hidden\");\n  //populate the form\n  form.dataset.state = \"put\";\n  form.dataset.id = data._id;\n  elements.taskName.value = data.task_name;\n  elements.describe.value = data.description;\n  elements.estimate.value = data.estimate;\n  elements.deadline.value = data.deadline;\n  elements.creator.value = data.creator;\n  elements.priority.value = data.priority;\n  document.querySelector(`input[value='${priority}']`).checked = true;\n  //handle submits\n  document.querySelector(\".add\").addEventListener(\"click\", (e) => {\n    checkInputData();\n    form.classList.add(\"hidden\");\n    form.reset();\n  });\n}\nfunction getTasktoEdit(id, callback) {\n  fetch(`${dataTrello}/${id}`, {\n    method: \"get\",\n    headers: {\n      accept: \"application/json\",\n      \"x-apikey\": apiKey,\n      \"cache-control\": \"no-cache\",\n    },\n  })\n    .then((e) => e.json())\n    .then((data) => callback(data));\n}\nfunction putNewData(data, id) {\n  //document.querySelector(`#cardcontainer[data-id='${id}']`).replaceWith(data);\n  const putData = JSON.stringify(data);\n  fetch(`${dataTrello}/${id}`, {\n    method: \"put\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      \"x-apikey\": apiKey,\n      \"cache-control\": \"no-cache\",\n    },\n    body: putData,\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      //showTasks(data)\n      const copy = document.querySelector(`article[data-id='${id}']`);\n      copy.querySelector(\".title\").textContent = data.task_name;\n      //clone.querySelector(\".descr\").textContent = task.description;\n      copy.querySelector(\".estimate\").textContent = \"ETC: \" + data.estimate;\n      copy.querySelector(\".deadline\").textContent = \"Due: \" + data.deadline;\n      copy.querySelector(\".priority\").textContent = data.priority;\n      copy.querySelector(\".creator\").textContent =\n        \"Created by: \" + data.creator;\n      copy.querySelector(\"button.close\").addEventListener(\"click\", (evt) => {\n        deleteATask(data._id);\n      });\n      copy.querySelector(\"button.editbtn\").addEventListener(\"click\", (evt) => {\n        getTasktoEdit(data._id, prepareForEdit);\n      });\n    });\n}\n"]}